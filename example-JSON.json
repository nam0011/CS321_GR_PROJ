
/*	
	example of dry weighted items,
	will use parameters:
		name - what food item is called
		type - protein, produce
		cost- price per oz
		weight - weight in oz.grams to the 10th
		onHand - current stock

	example of wet measured items,
	will use parameters:
		name - what food item is called
		type - wet
		cost- price per oz or ml (some products can be very small, i.e. essential oils)
		weight - measurement in oz or ml
		onHand - current stock
*/

{//beginning of file

"Ingredients":[
  {"name" : "" , "type" : "", "cost" : "", "weight" : "", "onHand" : ""},
  {"name" : "" , "type" : "", "cost" : "", "weight" : "", "onHand" : ""},
  {"name" : "" , "type" : "", "cost" : "", "weight" : "", "onHand" : ""},
  {"name" : "" , "type" : "", "cost" : "", "weight" : "", "onHand" : ""},
]//end of ingredients list


/*
	we can either add another list in the same file or
	create a seperate json file to store recipes
	I believe having two files will be easier to manage and
	keeping everything separate may be more secure.
	as long as both files are RW we should have no problem
	manipulating all lists
	*****Feeback on this please******
*/


/*

	example of recipe list
	will use parameters:
		name: recipe name
		itemsUsed: list of items to be used (separate this string using delim(","))
		indivItemWeight: how much of each item is needed
		totCost: what this recipe costs to make
	
*/

"Recipes":[
  {"name" : "" , "itemsUsed" : "a,b,c,d", "indivItemWeight" : "", "totCost" : ""},
  {"name" : "" , "itemsUsed" : "a,b,c,d", "indivItemWeight" : "", "totCost" : ""},
  {"name" : "" , "itemsUsed" : "a,b,c,d", "indivItemWeight" : "", "totCost" : ""},
  {"name" : "" , "itemsUsed" : "a,b,c,d", "indivItemWeight" : "", "totCost" : ""},
]//end of ingredients list


/*
	we do not have to have our recipes here to do inventory,
	however having the ability to "make" a recipe and it affect
	the onHand in ingredients would be a really easy way to keep track of food
	we can count how many times each recipe is made, then calculate each items
	end cost to the chef. 
	This along with a waste entry should produce an "ideal cost" which we can use
	to compare against the manual entry to produce the end lossses/gains

********
	Feedback on if we want losses and gains to also be kept 
	in a file or just presented
	at run time please
********

*/

}//end of file	